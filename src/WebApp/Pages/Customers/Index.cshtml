@page "{handler?}"
@using GaEpd.AppLibrary.Pagination
@using Sbeap.AppServices.Customers.Dto
@using Sbeap.WebApp.Pages.Shared.DisplayTemplates
@using Sbeap.WebApp.Platform.Constants
@model IndexModel
@{
    ViewData["Title"] = "Customer Search";
}

<h1>@ViewData["Title"]</h1>

<div class="text-muted ps-2">
    <em>All fields are optional.</em>
</div>
<div class="p-3 rounded-3 bg-light">
    <form method="get" asp-page-handler="Search" asp-fragment="SearchResults">
        <div class="form-floating mb-3">
            <input asp-for="Spec.Name" name="@nameof(Model.Spec.Name)" class="form-control" />
            <label asp-for="Spec.Name" class="form-label"></label>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="Spec.Description" name="@nameof(Model.Spec.Description)" class="form-control" />
            <label asp-for="Spec.Description" class="form-label"></label>
        </div>
        <div class="row">
            <div class="col-md mb-3">
                <div class="form-floating mb-3">
                    <input asp-for="Spec.City" name="@nameof(Model.Spec.City)" class="form-control" />
                    <label asp-for="Spec.City" class="form-label"></label>
                </div>
            </div>
            <div class="col-md mb-3">
                <div class="form-floating">
                    <select asp-for="Spec.County" name="@nameof(Model.Spec.County)" asp-items="Model.CountiesSelectList" class="form-select">
                        <option value="">@TextConstants.SelectTextAny</option>
                    </select>
                    <label asp-for="Spec.County" class="form-label"></label>
                </div>
            </div>
            @if (Model.ShowDeletionSearchOptions)
            {
                <div class="col-md mb-3">
                    <div class="form-floating">
                        <select asp-for="Spec.DeletedStatus" name="@nameof(Model.Spec.DeletedStatus)" asp-items="Html.GetEnumSelectList<CustomerDeletedStatus>()" class="form-select">
                            <option value="">@TextConstants.SelectNotDeleted</option>
                        </select>
                        <label asp-for="Spec.DeletedStatus" class="form-label"></label>
                    </div>
                </div>
            }
        </div>
        <div class="mt-3 mb-1">
            <button id="SearchButton" type="submit" class="btn btn-primary col-sm-3 me-2">Search</button>
            <a asp-page="Index" class="btn btn-outline-secondary col-sm-3 col-md-2">Clear Form</a>
        </div>
    </form>
</div>

@if (Model.ShowResults)
{
    <div id="SearchResults" class="mt-4">
        <h3>Search Results</h3>

        @if (Model.SearchResults.TotalCount == 0)
        {
            <p class="lead text-info">No search results found.</p>
        }
        else
        {
            <table class="table" aria-label="User search results">
                <caption class="caption-top">
                    <partial name="Shared/_PaginationNavAndCount" model="Model.PaginationNav" />
                </caption>

                <thead class="table-light">
                <tr>
                    <th scope="col">
                        <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                           asp-route-Sort="@(Model.Spec.Sort == CustomerSortBy.Name ? nameof(CustomerSortBy.NameDesc) : nameof(CustomerSortBy.Name))">
                            @Html.DisplayNameFor(m => m.Spec.Name)
                            @Html.DisplayFor(m => m.SortByName, DisplayTemplate.SortArrow, new { up = nameof(CustomerSortBy.Name), down = nameof(CustomerSortBy.NameDesc) })
                        </a>
                    </th>
                    <th scope="col">
                        <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                           asp-route-Sort="@(Model.Spec.Sort == CustomerSortBy.Description ? nameof(CustomerSortBy.DescriptionDesc) : nameof(CustomerSortBy.Description))">
                            @Html.DisplayNameFor(m => m.Spec.Description)
                            @Html.DisplayFor(m => m.SortByName, DisplayTemplate.SortArrow, new { up = nameof(CustomerSortBy.Description), down = nameof(CustomerSortBy.DescriptionDesc) })
                        </a>
                    </th>
                    <th scope="col">@Html.DisplayNameFor(m => m.Spec.County)</th>
                    <th scope="col">
                        <span class="visually-hidden">Actions</span>
                    </th>
                </tr>
                </thead>

                <tbody>
                @foreach (var item in Model.SearchResults.Items)
                {
                    <tr class="@(item.IsDeleted ? "table-secondary" : "")">
                        <th scope="row" class="fw-normal">
                            @Html.DisplayFor(m => item.Name, DisplayTemplate.StringOrNone)
                            @if (item.IsDeleted)
                            {
                                <br />
                                <strong>DELETED</strong>
                            }
                        </th>
                        <td>@Html.DisplayFor(m => item.Description, DisplayTemplate.TruncateText, new { MaxLength = 50 })</td>
                        <td>@Html.DisplayFor(m => item.County, DisplayTemplate.StringOrNone)</td>
                        <td>
                            <a asp-page="Details" class="btn btn-outline-info btn-sm" asp-route-id="@item.Id.ToString()">View</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>

            <partial name="_PaginationNav" model="Model.PaginationNav" />
        }
    </div>
}

@section Scripts {
    <script src="~/js/formSearch.js"></script>
}
