@page "{handler?}"
@using GaEpd.AppLibrary.Pagination
@using Sbeap.AppServices.Cases.Dto
@using Sbeap.AppServices.Customers.Dto
@using Sbeap.WebApp.Pages.Shared.DisplayTemplates
@using Sbeap.WebApp.Platform.Constants
@model IndexModel
@{
    ViewData["Title"] = "Case Search";
}

<h1>@ViewData["Title"]</h1>

<div class="text-muted ps-2">
    <em>All fields are optional.</em>
</div>
<div class="p-3 rounded-3 bg-light">
    <form method="get" asp-page-handler="Search" asp-fragment="SearchResults">
        <fieldset>
            <legend>Case Details</legend>
            <div class="row">
                <div class="col-md mb-3">
                    <div class="form-floating">
                        <select asp-for="Spec.Status" name="@nameof(Model.Spec.Status)" asp-items="Html.GetEnumSelectList<CaseStatus>()" class="form-select">
                            <option value="">@TextConstants.SelectAll</option>
                        </select>
                        <label asp-for="Spec.Status" class="form-label"></label>
                    </div>
                </div>
                @if (Model.ShowDeletionSearchOptions)
                {
                    <div class="col-md mb-3">
                        <div class="form-floating">
                            <select asp-for="Spec.DeletedStatus" name="@nameof(Model.Spec.DeletedStatus)" asp-items="Html.GetEnumSelectList<CaseDeletedStatus>()" class="form-select">
                                <option value="">@TextConstants.SelectNotDeleted</option>
                            </select>
                            <label asp-for="Spec.DeletedStatus" class="form-label"></label>
                        </div>
                    </div>
                }
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Spec.Description" name="@nameof(Model.Spec.Description)" class="form-control" />
                <label asp-for="Spec.Description" class="form-label"></label>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Spec.OpenedFrom" class="form-label px-2 mb-0">Date Opened</label>
                    <div class="input-group">
                        <div class="form-floating">
                            <input asp-for="Spec.OpenedFrom" name="@nameof(Model.Spec.OpenedFrom)" class="form-control" />
                            <label asp-for="Spec.OpenedFrom" class="form-label"></label>
                        </div>
                        <div class="form-floating">
                            <input asp-for="Spec.OpenedThrough" name="@nameof(Model.Spec.OpenedThrough)" class="form-control" />
                            <label asp-for="Spec.OpenedThrough" class="form-label"></label>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Spec.ClosedFrom" class="form-label px-2 mb-0">Date Closed</label>
                    <div class="input-group">
                        <div class="form-floating">
                            <input asp-for="Spec.ClosedFrom" name="@nameof(Model.Spec.ClosedFrom)" class="form-control" />
                            <label asp-for="Spec.ClosedFrom" class="form-label"></label>
                        </div>
                        <div class="form-floating">
                            <input asp-for="Spec.ClosedThrough" name="@nameof(Model.Spec.ClosedThrough)" class="form-control" />
                            <label asp-for="Spec.ClosedThrough" class="form-label"></label>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>Customer Details</legend>
            <div class="row">
                <div class="col-md mb-3">
                    <div class="form-floating">
                        <input asp-for="Spec.CustomerName" name="@nameof(Model.Spec.CustomerName)" class="form-control" />
                        <label asp-for="Spec.CustomerName" class="form-label"></label>
                    </div>
                </div>
                @if (Model.ShowDeletionSearchOptions)
                {
                    <div class="col-md mb-3">
                        <div class="form-floating">
                            <select asp-for="Spec.CustomerDeletedStatus" name="@nameof(Model.Spec.CustomerDeletedStatus)" asp-items="Html.GetEnumSelectList<CustomerDeletedStatus>()" class="form-select">
                                <option value="">@TextConstants.SelectNotDeleted</option>
                            </select>
                            <label asp-for="Spec.CustomerDeletedStatus" class="form-label"></label>
                        </div>
                    </div>
                }
                </div>
        </fieldset>

        <fieldset>
            <legend>Interagency Referral</legend>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Spec.ReferralAgency" class="form-label px-2 mb-0">Referred To</label>
                    <div class="form-floating">
                        <select asp-for="Spec.ReferralAgency" name="@nameof(Model.Spec.ReferralAgency)" asp-items="Model.AgencySelectList" class="form-select">
                            <option value="">@TextConstants.SelectTextAny</option>
                        </select>
                        <label asp-for="Spec.ReferralAgency" class="form-label"></label>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Spec.ReferredFrom" class="form-label px-2 mb-0">Date Case Referred</label>
                    <div class="input-group">
                        <div class="form-floating">
                            <input asp-for="Spec.ReferredFrom" name="@nameof(Model.Spec.ReferredFrom)" class="form-control" />
                            <label asp-for="Spec.ReferredFrom" class="form-label"></label>
                        </div>
                        <div class="form-floating">
                            <input asp-for="Spec.ReferredThrough" name="@nameof(Model.Spec.ReferredThrough)" class="form-control" />
                            <label asp-for="Spec.ReferredThrough" class="form-label"></label>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

        <div class="mt-3 mb-1">
            <button id="SearchButton" type="submit" class="btn btn-primary col-sm-3 me-2">Search</button>
            <a asp-page="Index" class="btn btn-outline-secondary col-sm-3 col-md-2">Clear Form</a>
        </div>
    </form>
</div>

@if (Model.ShowResults)
{
    <div id="SearchResults" class="mt-4">
        <h3>Search Results</h3>

        @if (Model.SearchResults.TotalCount == 0)
        {
            <p class="lead text-info">No search results found.</p>
        }
        else
        {
            <table class="table" aria-label="User search results">
                <caption class="caption-top">
                    <partial name="Shared/_PaginationNavAndCount" model="((IPaginatedResult)Model.SearchResults, Model.Spec.AsRouteValues())" />
                </caption>

                <thead class="table-light">
                <tr>
                    <th scope="col">
                        <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                           asp-route-Sort="@(Model.Spec.Sort == CaseworkSortBy.Customer ? CaseworkSortBy.CustomerDesc : CaseworkSortBy.Customer)">
                            @Html.DisplayNameFor(m => m.Spec.CustomerName)
                            @Html.DisplayFor(m => m.SortByName, DisplayTemplate.SortArrow, new { up = CaseworkSortBy.Customer.ToString(), down = CaseworkSortBy.CustomerDesc.ToString() })
                        </a>
                    </th>
                    <th scope="col">
                        <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                           asp-route-Sort="@(Model.Spec.Sort == CaseworkSortBy.OpenedDate ? CaseworkSortBy.OpenedDateDesc : CaseworkSortBy.OpenedDate)">
                            Date Opened
                            @Html.DisplayFor(m => m.SortByName, DisplayTemplate.SortArrow, new { up = CaseworkSortBy.OpenedDate.ToString(), down = CaseworkSortBy.OpenedDateDesc.ToString() })
                        </a>
                    </th>
                    <th scope="col">
                        <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                           asp-route-Sort="@(Model.Spec.Sort == CaseworkSortBy.ClosedDate ? CaseworkSortBy.ClosedDateDesc : CaseworkSortBy.ClosedDate)">
                            Date Opened
                            @Html.DisplayFor(m => m.SortByName, DisplayTemplate.SortArrow, new { up = CaseworkSortBy.ClosedDate.ToString(), down = CaseworkSortBy.ClosedDateDesc.ToString() })
                        </a>
                    </th>
                    <th scope="col">@Html.DisplayNameFor(m => m.Spec.Description)</th>
                    <th scope="col">
                        <a asp-fragment="SearchResults" asp-all-route-data="Model.Spec.AsRouteValues()" asp-route-handler="search"
                           asp-route-Sort="@(Model.Spec.Sort == CaseworkSortBy.Status ? CaseworkSortBy.StatusDesc : CaseworkSortBy.Status)">
                            @Html.DisplayNameFor(m => m.Spec.Status)
                            @Html.DisplayFor(m => m.SortByName, DisplayTemplate.SortArrow, new { up = CaseworkSortBy.Status.ToString(), down = CaseworkSortBy.StatusDesc.ToString() })
                        </a>
                    </th>
                    <th scope="col">
                        <span class="visually-hidden">Actions</span>
                    </th>
                </tr>
                </thead>

                <tbody>
                @foreach (var item in Model.SearchResults.Items)
                {
                    <tr class="@(item.IsDeleted ? "table-secondary" : "")">
                        <th scope="row" class="fw-normal">
                            @Html.DisplayFor(m => item.CustomerName, DisplayTemplate.StringOrNone)
                        </th>
                        <td>@Html.DisplayFor(m => item.CaseOpenedDate, DisplayTemplate.DateOnly)</td>
                        <td>@Html.DisplayFor(m => item.CaseClosedDate, DisplayTemplate.DateOnlyOrBlank)</td>
                        <td>@Html.DisplayFor(m => item.Description, DisplayTemplate.TruncateText, new { MaxLength = 150 })</td>
                        <td>
                            @if (item.IsDeleted)
                            {
                                <strong>DELETED</strong>
                            }
                            else
                            {
                                @Html.DisplayFor(m => item.IsClosed, DisplayTemplate.BoolClosed)
                            }
                        </td>
                        <td>
                            <a asp-page="Details" class="btn btn-outline-info btn-sm" asp-route-id="@item.Id">View</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>

            <partial name="_PaginationNav" model="((IPaginatedResult)Model.SearchResults, Model.Spec.AsRouteValues())" />
        }
    </div>
}

@section Scripts {
    <script src="~/js/formSearch.js"></script>
}
